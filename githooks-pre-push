#!/bin/bash

# Format all files that are different from the remote, committed or not
if [[ -f .clang-format ]] && type -t git-clang-format >& /dev/null \
  && [[ ! -f "diff.$(git rev-parse --abbrev-ref HEAD)" ]]
then
  z40=0000000000000000000000000000000000000000
  while read local_ref local_sha remote_ref remote_sha
  do
      if [ "${remote_sha}" = ${z40} ]
      then
        # new branch
        branches=( "FETCH_HEAD" "${local_ref}" )
      else
        branches=( "${remote_sha}" "${local_ref}" )
      fi
      compare=$( git merge-base --octopus "${branches[@]}" )
      echo "Checking formatting of files changed since ${compare}"
      git-clang-format --extensions c,cpp,h,cxx,ipp "${compare}"
  done

  # Only uncomment the following line if you want to aggressively ensure
  # that all formatting across the project is correct, and your version
  # of `clang-format` doesn't have any incompatibilities.
  # find src/ripple src/test -type f \( -name '*.cpp' -o -name '*.h' -o -name '*.ipp' \) -print0 | xargs -0 clang-format -i

  # Comment the following line if you want to let the push complete even if
  # there are formatting problems.
  git diff --exit-code
fi
