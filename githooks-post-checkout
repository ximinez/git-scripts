#!/bin/bash

# for dir in ../*/.git/hooks ; do \cp -v githooks-post-checkout ${dir}/post-checkout ; done
#
# OR
#
# mkdir -p ~/.git/hooks/ && \cp -v githooks-post-checkout ~/.git/hooks/post-checkout && git config --global core.hooksPath ~/.git/hooks/

error()
{
  echo -e '*\n *\n  *\n *'
  echo -e '*\n *\n  *\n   * GPG signature not verified\n  *\n *\n*'
  echo -e ' *\n  *\n *\n*'
}

if [[ -f CMakeLists.txt ]]
then
  for repo in . $( git config --file .gitmodules --get-regexp path | \
    cut -d\  -f2 )
  do
    if [[ ! -d ${repo} || ! -f ${repo}/CMakeLists.txt || \
      ! -f ${repo}/.gitignore || \
      $( grep -cw build ${repo}/.gitignore ) == 0 ]]
    then
      continue
    fi
    pushd ${repo}

    for unity in ON OFF
    do
      target=msvc.${unity}
      mkdir -pv build/cmake/${target}
      pushd build/cmake/${target}
      # I like asserts.
      set -x
      cmake -G"Visual Studio 15 2017 Win64" -Dunity=${unity} -Dassert=true ../../..
      set +x
      popd
    done

    popd
  done
  # Update any custom / non-build CMake folders
  find . -path '*/build/cmake' -prune -false -o -name CMakeCache.txt -print0 | \
    xargs -r0 -n1 -P4 cmake
fi

git verify-commit ${2} || error

if git branch -r | grep -q upstream/develop
then
	git log --oneline -1 ..upstream/develop
fi
