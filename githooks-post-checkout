#!/bin/bash

# To install
# for dir in ../*/.git ; do echo $dir ; ln -vsf $( pwd )/githooks-post-checkout $dir/hooks/post-checkout ; done
#
# OR
#
# mkdir -p ~/.git/hooks/ && ln -vsf $( pwd )/githooks-post-checkout ~/.git/hooks/post-checkout && git config --global core.hooksPath ~/.git/hooks/

error()
{
  echo -e '*\n *\n  *\n *'
  echo -e '*\n *\n  *\n   * GPG signature not verified\n  *\n *\n*'
  echo -e ' *\n  *\n *\n*'
}

if [[ -f CMakeLists.txt ]] && \
  [[ ! ( $(pwd) =~ ".nih_c" || $(pwd) =~ "build/cmake" || \
  $(pwd) =~ "_deps" ) ]]
then
  echo -e "\n\n\n\n\nBuilding cmake in $(pwd)\n\n\n\n\n"
  for repo in . $( git config --file .gitmodules --get-regexp path | \
    cut -d\  -f2 )
  do
    if [[ ! -d ${repo} || ! -f ${repo}/CMakeLists.txt || \
      ! -f ${repo}/.gitignore || \
      $( grep -cw build ${repo}/.gitignore ) == 0 ]]
    then
      continue
    fi
    pushd ${repo}
    for c in gcc clang
      do
      for debug in Debug Release
      do
        for unity in ON OFF
        do
          cxx=${c/gcc/g++}
          cxx=${cxx/clang/clang++}
          target=${c}.${debug}.${unity}
          mkdir -pv build/cmake/${target}
          pushd build/cmake/${target}
          echo -e "\n\n\nTarget: $target"
          # I like asserts, and ccache
          set -x
          cmake -Dunity=${unity} -DCMAKE_BUILD_TYPE=${debug} -DCMAKE_C_COMPILER=${c} -DCMAKE_CXX_COMPILER=${cxx} -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -Dassert=true -DBOOST_ROOT=$BOOST_ROOT -Dwerr=ON ../../..
          set +x
          popd
        done
      done
    done
    popd
  done
  # Update any custom / non-build CMake folders
  find . \( -path '*/build/cmake' -o -path '*/.nih_c' \) -prune -false -o \
    -name CMakeCache.txt -print0 | \
    xargs -r0 -n1 -P4 cmake
fi

git verify-commit ${2} || error

if git branch -r | grep -q upstream/develop
then
	git log --oneline -1 ..upstream/develop
fi
