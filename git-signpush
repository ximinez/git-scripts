#!/bin/bash

branch=$( git rev-parse --abbrev-ref --symbolic-full-name "@" )
remote=$( git rev-parse --abbrev-ref --symbolic-full-name "@{u}" \
              2>/dev/null )
push=$( git rev-parse --abbrev-ref --symbolic-full-name "@{push}" \
              2>/dev/null )

[[ "${remote}" != "" ]] && git fetch || echo New branch

unset ci
if [[ "${1}" == "-ci" || "${1}" == "ci" ]]
then
  shift
  ci=1
fi

defaultRemote=$( git config checkout.defaultRemote )
if [[ -z "${defaultRemote}" ]]
then
  defaultRemote=origin
fi

# %G?
# show "G" for a good (valid) signature,
# "B" for a bad signature,
# "U" for a good signature with unknown validity,
# "X" for a good signature that has expired,
# "Y" for a good signature made by an expired key,
# "R" for a good signature made by a revoked key,
# "E" if the signature cannot be checked (e.g. missing key)
# and "N" for no signature
validity=$( git log --pretty="%G?" -1 )
echo -n "${validity}: "
case "${validity}" in
  G)
    echo "Good signature"
    ;;
  B)
    echo "BAD SIGNATURE!!!!"
    ;;
  U)
    echo "Good signature, unknown validity"
    ;;
  X)
    echo "Good signature, expired"
    ;;
  Y)
    echo "Good signature, expired key"
    ;;
  R)
    echo "Good signature, revoked key"
    ;;
  E)
    echo "Signature can not be checked"
    ;;
  N)
    echo "No signature"
    ;;
  *)
    echo "UNKNOWN VALIDITY VALUE"
    ;;
esac

git diff --quiet --staged &&
  ( [[ "${validity}" != "N" ]] || git commit --amend --no-edit -S ) &&
    ( git push --force-with-lease "${@}" ||
      git push "${@}" ||
      ( [[ "${remote}" == "" || "${push}" == "" ]] &&
      git push "${@}" --set-upstream "${defaultRemote}" "${branch}" ) ) &&
    ( [[ -z "${ci}" ]] && exit 0 ||
      git push --force-with-lease ci
        "${branch}":"ed-${branch}" )
# https://developer.atlassian.com/blog/2015/04/force-with-lease/

